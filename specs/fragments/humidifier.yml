# Auto-generated Openapi model from the following content:
# 
# action_template:
#   description: A template to render the value received on the `action_topic` with.
#   required: false
#   type: template
# action_topic:
#   description: >-
#     The MQTT topic to subscribe for changes of the current action.
#     Valid values: `off`, `humidifying`, `drying`, `idle`
#   required: false
#   type: string
# availability:
#   description: A list of MQTT topics subscribed to receive availability (online/offline) updates. Must not be used together with `availability_topic`.
#   required: false
#   type: list
#   keys:
#     payload_available:
#       description: The payload that represents the available state.
#       required: false
#       type: string
#       default: online
#     payload_not_available:
#       description: The payload that represents the unavailable state.
#       required: false
#       type: string
#       default: offline
#     topic:
#       description: An MQTT topic subscribed to receive availability (online/offline) updates.
#       required: true
#       type: string
#     value_template:
#       description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract device's availability from the `topic`. To determine the devices's availability result of this template will be compared to `payload_available` and `payload_not_available`."
#       required: false
#       type: template
# availability_mode:
#   description: When `availability` is configured, this controls the conditions needed to set the entity to `available`. Valid entries are `all`, `any`, and `latest`. If set to `all`, `payload_available` must be received on all configured availability topics before the entity is marked as online. If set to `any`, `payload_available` must be received on at least one configured availability topic before the entity is marked as online. If set to `latest`, the last `payload_available` or `payload_not_available` received on any configured availability topic controls the availability.
#   required: false
#   type: string
#   default: latest
# availability_template:
#   description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract device's availability from the `availability_topic`. To determine the devices's availability result of this template will be compared to `payload_available` and `payload_not_available`."
#   required: false
#   type: template
# availability_topic:
#   description: The MQTT topic subscribed to receive availability (online/offline) updates. Must not be used together with `availability`.
#   required: false
#   type: string
# current_humidity_template:
#   description: A template with which the value received on `current_humidity_topic` will be rendered.
#   required: false
#   type: template
# current_humidity_topic:
#   description: The MQTT topic on which to listen for the current humidity. A `"None"` value received will reset the current humidity. Empty values (`'''`) will be ignored.
#   required: false
#   type: string
# command_template:
#   description: Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to generate the payload to send to `command_topic`.
#   required: false
#   type: template
# command_topic:
#   description: The MQTT topic to publish commands to change the humidifier state.
#   required: true
#   type: string
# device:
#   description: "Information about the device this humidifier is a part of to tie it into the [device registry](https://developers.home-assistant.io/docs/en/device_registry_index.html). Only works when [`unique_id`](#unique_id) is set. At least one of identifiers or connections must be present to identify the device."
#   required: false
#   type: map
#   keys:
#     configuration_url:
#       description: 'A link to the webpage that can manage the configuration of this device. Can be either an `http://`, `https://` or an internal `homeassistant://` URL.'
#       required: false
#       type: string
#     connections:
#       description: 'A list of connections of the device to the outside world as a list of tuples `[connection_type, connection_identifier]`. For example the MAC address of a network interface: `"connections": [["mac", "02:5b:26:a8:dc:12"]]`.'
#       required: false
#       type: [list, map]
#     hw_version:
#       description: The hardware version of the device.
#       required: false
#       type: string
#     identifiers:
#       description: A list of IDs that uniquely identify the device. For example a serial number.
#       required: false
#       type: [string, list]
#     manufacturer:
#       description: The manufacturer of the device.
#       required: false
#       type: string
#     model:
#       description: The model of the device.
#       required: false
#       type: string
#     name:
#       description: The name of the device.
#       required: false
#       type: string
#     suggested_area:
#       description: 'Suggest an area if the device isnâ€™t in one yet.'
#       required: false
#       type: string
#     sw_version:
#       description: The firmware version of the device.
#       required: false
#       type: string
#     via_device:
#       description: 'Identifier of a device that routes messages between this device and Home Assistant. Examples of such devices are hubs, or parent devices of a sub-device. This is used to show device topology in Home Assistant.'
#       required: false
#       type: string
# device_class:
#   description: The device class of the MQTT device. Must be either `humidifier`, `dehumidifier` or `null`.
#   required: false
#   type: string
#   default: humidifier
# enabled_by_default:
#   description: Flag which defines if the entity should be enabled when first added.
#   required: false
#   type: boolean
#   default: true
# encoding:
#   description: The encoding of the payloads received and published messages. Set to `""` to disable decoding of incoming payload.
#   required: false
#   type: string
#   default: "utf-8"
# entity_category:
#   description: The [category](https://developers.home-assistant.io/docs/core/entity#generic-properties) of the entity.
#   required: false
#   type: string
#   default: None
# icon:
#   description: "[Icon](/docs/configuration/customizing-devices/#icon) for the entity."
#   required: false
#   type: icon
# json_attributes_template:
#   description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract the JSON dictionary from messages received on the `json_attributes_topic`. Usage example can be found in [MQTT sensor](/integrations/sensor.mqtt/#json-attributes-template-configuration) documentation."
#   required: false
#   type: template
# json_attributes_topic:
#   description: The MQTT topic subscribed to receive a JSON dictionary payload and then set as sensor attributes. Usage example can be found in [MQTT sensor](/integrations/sensor.mqtt/#json-attributes-topic-configuration) documentation.
#   required: false
#   type: string
# max_humidity:
#   description: The minimum target humidity percentage that can be set.
#   required: false
#   type: integer
#   default: 100
# min_humidity:
#   description: The maximum target humidity percentage that can be set.
#   required: false
#   type: integer
#   default: 0
# name:
#   description: The name of the humidifier. Can be set to `null` if only the device name is relevant.
#   required: false
#   type: string
#   default: MQTT humidifier
# object_id:
#   description: Used instead of `name` for automatic generation of `entity_id`
#   required: false
#   type: string
# optimistic:
#   description: Flag that defines if humidifier works in optimistic mode
#   required: false
#   type: boolean
#   default: "`true` if no state topic defined, else `false`."
# payload_available:
#   description: The payload that represents the available state.
#   required: false
#   type: string
#   default: online
# payload_not_available:
#   description: The payload that represents the unavailable state.
#   required: false
#   type: string
#   default: offline
# payload_off:
#   description: The payload that represents the stop state.
#   required: false
#   type: string
#   default: "OFF"
# payload_on:
#   description: The payload that represents the running state.
#   required: false
#   type: string
#   default: "ON"
# payload_reset_humidity:
#   description: A special payload that resets the `target_humidity` state attribute to an `unknown` state when received at the `target_humidity_state_topic`. When received at `current_humidity_topic` it will reset the current humidity state.
#   required: false
#   type: string
#   default: 'None'
# payload_reset_mode:
#   description: A special payload that resets the `mode` state attribute to an `unknown` state when received at the `mode_state_topic`.
#   required: false
#   type: string
#   default: 'None'
# target_humidity_command_template:
#   description: Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to generate the payload to send to `target_humidity_command_topic`.
#   required: false
#   type: template
# target_humidity_command_topic:
#   description: The MQTT topic to publish commands to change the humidifier target humidity state based on a percentage.
#   required: true
#   type: string
# target_humidity_state_topic:
#   description: The MQTT topic subscribed to receive humidifier target humidity.
#   required: false
#   type: string
# target_humidity_state_template:
#   description: Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract a value for the humidifier `target_humidity` state.
#   required: false
#   type: template
# mode_command_template:
#   description: Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to generate the payload to send to `mode_command_topic`.
#   required: false
#   type: template
# mode_command_topic:
#   description: The MQTT topic to publish commands to change the `mode` on the humidifier. This attribute ust be configured together with the `modes` attribute.
#   required: false
#   type: string
# mode_state_topic:
#   description: The MQTT topic subscribed to receive the humidifier `mode`.
#   required: false
#   type: string
# mode_state_template:
#   description: Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract a value for the humidifier `mode` state.
#   required: false
#   type: template
# modes:
#   description: List of available modes this humidifier is capable of running at. Common examples include `normal`, `eco`, `away`, `boost`, `comfort`, `home`, `sleep`, `auto` and `baby`. These examples offer built-in translations but other custom modes are allowed as well.  This attribute ust be configured together with the `mode_command_topic` attribute.
#   required: false
#   type: [list]
#   default: []
# qos:
#   description: The maximum QoS level to be used when receiving and publishing messages.
#   required: false
#   type: integer
#   default: 0
# retain:
#   description: If the published message should have the retain flag on or not.
#   required: false
#   type: boolean
#   default: true
# state_topic:
#   description: The MQTT topic subscribed to receive state updates.
#   required: false
#   type: string
# state_value_template:
#   description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract a value from the state."
#   required: false
#   type: template
# unique_id:
#   description: An ID that uniquely identifies this humidifier. If two humidifiers have the same unique ID, Home Assistant will raise an exception.
#   required: false
#   type: string
# 

type: object
description: >-
  The `humidifier` integration is built for the controlling and monitoring of
  humidifiers, dehumidifiers, and hygrostat devices.
required:
  - command_topic
  - target_humidity_command_topic
properties:
  action_template:
    description: A template to render the value received on the `action_topic` with.
    type: string
  action_topic:
    description: >-
      The MQTT topic to subscribe for changes of the current action. Valid
      values: `off`, `humidifying`, `drying`, `idle`
    type: string
  availability:
    description: >-
      A list of MQTT topics subscribed to receive availability (online/offline)
      updates. Must not be used together with `availability_topic`.
    type: array
    items:
      payload_available:
        description: 'The payload that represents the available state. (Default: online)'
        type: string
      payload_not_available:
        description: 'The payload that represents the unavailable state. (Default: offline)'
        type: string
      topic:
        description: >-
          An MQTT topic subscribed to receive availability (online/offline)
          updates.
        type: string
      value_template:
        description: >-
          Defines a
          [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
          to extract device's availability from the `topic`. To determine the
          devices's availability result of this template will be compared to
          `payload_available` and `payload_not_available`.
        type: string
  availability_mode:
    description: >-
      When `availability` is configured, this controls the conditions needed to
      set the entity to `available`. Valid entries are `all`, `any`, and
      `latest`. If set to `all`, `payload_available` must be received on all
      configured availability topics before the entity is marked as online. If
      set to `any`, `payload_available` must be received on at least one
      configured availability topic before the entity is marked as online. If
      set to `latest`, the last `payload_available` or `payload_not_available`
      received on any configured availability topic controls the availability.
      (Default: latest)
    type: string
  availability_template:
    description: >-
      Defines a
      [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
      to extract device's availability from the `availability_topic`. To
      determine the devices's availability result of this template will be
      compared to `payload_available` and `payload_not_available`.
    type: string
  availability_topic:
    description: >-
      The MQTT topic subscribed to receive availability (online/offline)
      updates. Must not be used together with `availability`.
    type: string
  current_humidity_template:
    description: >-
      A template with which the value received on `current_humidity_topic` will
      be rendered.
    type: string
  current_humidity_topic:
    description: >-
      The MQTT topic on which to listen for the current humidity. A `"None"`
      value received will reset the current humidity. Empty values (`'''`) will
      be ignored.
    type: string
  command_template:
    description: >-
      Defines a
      [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
      to generate the payload to send to `command_topic`.
    type: string
  command_topic:
    description: The MQTT topic to publish commands to change the humidifier state.
    type: string
  device:
    type: object
    description: >-
      Information about the device this humidifier is a part of to tie it into
      the [device
      registry](https://developers.home-assistant.io/docs/en/device_registry_index.html).
      Only works when [`unique_id`](#unique_id) is set. At least one of
      identifiers or connections must be present to identify the device.
    required: []
    properties:
      configuration_url:
        description: >-
          A link to the webpage that can manage the configuration of this
          device. Can be either an `http://`, `https://` or an internal
          `homeassistant://` URL.
        type: string
      hw_version:
        description: The hardware version of the device.
        type: string
      manufacturer:
        description: The manufacturer of the device.
        type: string
      model:
        description: The model of the device.
        type: string
      name:
        description: The name of the device.
        type: string
      suggested_area:
        description: Suggest an area if the device isnâ€™t in one yet.
        type: string
      sw_version:
        description: The firmware version of the device.
        type: string
      via_device:
        description: >-
          Identifier of a device that routes messages between this device and
          Home Assistant. Examples of such devices are hubs, or parent devices
          of a sub-device. This is used to show device topology in Home
          Assistant.
        type: string
  device_class:
    description: >-
      The device class of the MQTT device. Must be either `humidifier`,
      `dehumidifier` or `null`. (Default: humidifier)
    type: string
  enabled_by_default:
    description: >-
      Flag which defines if the entity should be enabled when first added.
      (Default: true)
    type: string
  encoding:
    description: >-
      The encoding of the payloads received and published messages. Set to `""`
      to disable decoding of incoming payload. (Default: utf-8)
    type: string
  entity_category:
    description: >-
      The
      [category](https://developers.home-assistant.io/docs/core/entity#generic-properties)
      of the entity. (Default: None)
    type: string
  json_attributes_template:
    description: >-
      Defines a
      [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
      to extract the JSON dictionary from messages received on the
      `json_attributes_topic`. Usage example can be found in [MQTT
      sensor](/integrations/sensor.mqtt/#json-attributes-template-configuration)
      documentation.
    type: string
  json_attributes_topic:
    description: >-
      The MQTT topic subscribed to receive a JSON dictionary payload and then
      set as sensor attributes. Usage example can be found in [MQTT
      sensor](/integrations/sensor.mqtt/#json-attributes-topic-configuration)
      documentation.
    type: string
  max_humidity:
    description: 'The minimum target humidity percentage that can be set. (Default: 100)'
    type: string
  min_humidity:
    description: The maximum target humidity percentage that can be set.
    type: string
  name:
    description: >-
      The name of the humidifier. Can be set to `null` if only the device name
      is relevant. (Default: MQTT humidifier)
    type: string
  object_id:
    description: Used instead of `name` for automatic generation of `entity_id`
    type: string
  optimistic:
    description: >-
      Flag that defines if humidifier works in optimistic mode (Default: `true`
      if no state topic defined, else `false`.)
    type: string
  payload_available:
    description: 'The payload that represents the available state. (Default: online)'
    type: string
  payload_not_available:
    description: 'The payload that represents the unavailable state. (Default: offline)'
    type: string
  payload_off:
    description: 'The payload that represents the stop state. (Default: OFF)'
    type: string
  payload_on:
    description: 'The payload that represents the running state. (Default: ON)'
    type: string
  payload_reset_humidity:
    description: >-
      A special payload that resets the `target_humidity` state attribute to an
      `unknown` state when received at the `target_humidity_state_topic`. When
      received at `current_humidity_topic` it will reset the current humidity
      state. (Default: None)
    type: string
  payload_reset_mode:
    description: >-
      A special payload that resets the `mode` state attribute to an `unknown`
      state when received at the `mode_state_topic`. (Default: None)
    type: string
  target_humidity_command_template:
    description: >-
      Defines a
      [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
      to generate the payload to send to `target_humidity_command_topic`.
    type: string
  target_humidity_command_topic:
    description: >-
      The MQTT topic to publish commands to change the humidifier target
      humidity state based on a percentage.
    type: string
  target_humidity_state_topic:
    description: The MQTT topic subscribed to receive humidifier target humidity.
    type: string
  target_humidity_state_template:
    description: >-
      Defines a
      [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
      to extract a value for the humidifier `target_humidity` state.
    type: string
  mode_command_template:
    description: >-
      Defines a
      [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
      to generate the payload to send to `mode_command_topic`.
    type: string
  mode_command_topic:
    description: >-
      The MQTT topic to publish commands to change the `mode` on the humidifier.
      This attribute ust be configured together with the `modes` attribute.
    type: string
  mode_state_topic:
    description: The MQTT topic subscribed to receive the humidifier `mode`.
    type: string
  mode_state_template:
    description: >-
      Defines a
      [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
      to extract a value for the humidifier `mode` state.
    type: string
  qos:
    description: The maximum QoS level to be used when receiving and publishing messages.
    type: string
  retain:
    description: >-
      If the published message should have the retain flag on or not. (Default:
      true)
    type: string
  state_topic:
    description: The MQTT topic subscribed to receive state updates.
    type: string
  state_value_template:
    description: >-
      Defines a
      [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
      to extract a value from the state.
    type: string
  unique_id:
    description: >-
      An ID that uniquely identifies this humidifier. If two humidifiers have
      the same unique ID, Home Assistant will raise an exception.
    type: string
