# Auto-generated Openapi model from the following content:
# 
# availability:
#   description: A list of MQTT topics subscribed to receive availability (online/offline) updates. Must not be used together with `availability_topic`.
#   required: false
#   type: list
#   keys:
#     payload_available:
#       description: The payload that represents the available state.
#       required: false
#       type: string
#       default: online
#     payload_not_available:
#       description: The payload that represents the unavailable state.
#       required: false
#       type: string
#       default: offline
#     topic:
#       description: An MQTT topic subscribed to receive availability (online/offline) updates.
#       required: true
#       type: string
#     value_template:
#       description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract device's availability from the `topic`. To determine the devices's availability result of this template will be compared to `payload_available` and `payload_not_available`."
#       required: false
#       type: template
# availability_mode:
#   description: When `availability` is configured, this controls the conditions needed to set the entity to `available`. Valid entries are `all`, `any`, and `latest`. If set to `all`, `payload_available` must be received on all configured availability topics before the entity is marked as online. If set to `any`, `payload_available` must be received on at least one configured availability topic before the entity is marked as online. If set to `latest`, the last `payload_available` or `payload_not_available` received on any configured availability topic controls the availability.
#   required: false
#   type: string
#   default: latest
# availability_template:
#   description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract device's availability from the `availability_topic`. To determine the devices's availability result of this template will be compared to `payload_available` and `payload_not_available`."
#   required: false
#   type: template
# availability_topic:
#   description: The MQTT topic subscribed to receive availability (online/offline) updates.
#   required: false
#   type: string
# device:
#   description: "Information about the device this sensor is a part of to tie it into the [device registry](https://developers.home-assistant.io/docs/device_registry_index/). Only works when [`unique_id`](#unique_id) is set. At least one of identifiers or connections must be present to identify the device."
#   required: false
#   type: map
#   keys:
#     configuration_url:
#       description: 'A link to the webpage that can manage the configuration of this device. Can be either an `http://`, `https://` or an internal `homeassistant://` URL.'
#       required: false
#       type: string
#     connections:
#       description: 'A list of connections of the device to the outside world as a list of tuples `[connection_type, connection_identifier]`. For example the MAC address of a network interface: `"connections": [["mac", "02:5b:26:a8:dc:12"]]`.'
#       required: false
#       type: list
#     hw_version:
#       description: The hardware version of the device.
#       required: false
#       type: string
#     identifiers:
#       description: A list of IDs that uniquely identify the device. For example a serial number.
#       required: false
#       type: [string, list]
#     manufacturer:
#       description: The manufacturer of the device.
#       required: false
#       type: string
#     model:
#       description: The model of the device.
#       required: false
#       type: string
#     name:
#       description: The name of the device.
#       required: false
#       type: string
#     suggested_area:
#       description: 'Suggest an area if the device isnâ€™t in one yet.'
#       required: false
#       type: string
#     sw_version:
#       description: The firmware version of the device.
#       required: false
#       type: string
#     via_device:
#       description: 'Identifier of a device that routes messages between this device and Home Assistant. Examples of such devices are hubs, or parent devices of a sub-device. This is used to show device topology in Home Assistant.'
#       required: false
#       type: string
# device_class:
#   description: The [type/class](/integrations/sensor/#device-class) of the sensor to set the icon in the frontend. The `device_class` can be `null`.
#   default: None
#   required: false
#   type: device_class
#   default: None
# enabled_by_default:
#   description: Flag which defines if the entity should be enabled when first added.
#   required: false
#   type: boolean
#   default: true
# encoding:
#   description: The encoding of the payloads received. Set to `""` to disable decoding of incoming payload.
#   required: false
#   type: string
#   default: "utf-8"
# entity_category:
#   description: The [category](https://developers.home-assistant.io/docs/core/entity#generic-properties) of the entity.
#   required: false
#   type: string
#   default: None
# expire_after:
#   description: If set, it defines the number of seconds after the sensor's state expires, if it's not updated. After expiry, the sensor's state becomes `unavailable`. Default the sensors state never expires.
#   required: false
#   type: integer
#   default: 0
# force_update:
#   description: Sends update events even if the value hasn't changed. Useful if you want to have meaningful value graphs in history.
#   required: false
#   type: boolean
#   default: false
# icon:
#   description: "[Icon](/docs/configuration/customizing-devices/#icon) for the entity."
#   required: false
#   type: icon
# json_attributes_template:
#   description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract the JSON dictionary from messages received on the `json_attributes_topic`."
#   required: false
#   type: template
# json_attributes_topic:
#   description: The MQTT topic subscribed to receive a JSON dictionary payload and then set as sensor attributes. Implies `force_update` of the current sensor state when a message is received on this topic.
#   required: false
#   type: string
# last_reset_value_template:
#   description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract the last_reset. Available variables: `entity_id`. The `entity_id` can be used to reference the entity's attributes."
#   required: false
#   type: template
# name:
#   description: The name of the MQTT sensor. Can be set to `null` if only the device name is relevant.
#   required: false
#   type: string
#   default: MQTT Sensor
# object_id:
#   description: Used instead of `name` for automatic generation of `entity_id`
#   required: false
#   type: string
# payload_available:
#   description: The payload that represents the available state.
#   required: false
#   type: string
#   default: online
# payload_not_available:
#   description: The payload that represents the unavailable state.
#   required: false
#   type: string
#   default: offline
# suggested_display_precision:
#   description: The number of decimals which should be used in the sensor's state after rounding.
#   required: false
#   type: integer
# qos:
#   description: The maximum QoS level to be used when receiving and publishing messages.
#   required: false
#   type: integer
#   default: 0
# state_class:
#   description: The [state_class](https://developers.home-assistant.io/docs/core/entity/sensor#available-state-classes) of the sensor.
#   required: false
#   type: string
#   default: None
# state_topic:
#   description: The MQTT topic subscribed to receive sensor values. If `device_class`, `state_class`, `unit_of_measurement` or `suggested_display_precision` is set, and a numeric value is expected, an empty value `''` will be ignored and will not update the state, a `'null'` value will set the sensor to an `unknown` state. The `device_class` can be `null`.
#   default: None
#   required: true
#   type: string
# unique_id:
#   description: "An ID that uniquely identifies this sensor. If two sensors have the same unique ID, Home Assistant will raise an exception."
#   required: false
#   type: string
# unit_of_measurement:
#   description: Defines the units of measurement of the sensor, if any. The `unit_of_measurement` can be `null`.
#   default: None
#   required: false
#   type: string
# value_template:
#   description: "Defines a [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration) to extract the value. If the template throws an error, the current state will be used instead."
#   required: false
#   type: template
# 

allOf:
  #- $ref: "common.yml#/Availability"
  - $ref: "common.yml#/Device"
  - type: object
    required:
      - state_topic
    properties:
      device:
        $ref: "common.yml#/Device"
      device_class:
        description: >-
          The [type/class](/integrations/sensor/#device-class) of the sensor to set
          the icon in the frontend. The `device_class` can be `null`. (Default:
          None)
        type: string
      enabled_by_default:
        description: >-
          Flag which defines if the entity should be enabled when first added.
          (Default: true)
        type: string
      encoding:
        description: >-
          The encoding of the payloads received. Set to `""` to disable decoding of
          incoming payload. (Default: utf-8)
        type: string
      entity_category:
        description: >-
          The
          [category](https://developers.home-assistant.io/docs/core/entity#generic-properties)
          of the entity. (Default: None)
        type: string
      expire_after:
        description: >-
          If set, it defines the number of seconds after the sensor's state expires,
          if it's not updated. After expiry, the sensor's state becomes
          `unavailable`. Default the sensors state never expires.
        type: string
      force_update:
        description: >-
          Sends update events even if the value hasn't changed. Useful if you want
          to have meaningful value graphs in history.
        type: string
      json_attributes_template:
        description: >-
          Defines a
          [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
          to extract the JSON dictionary from messages received on the
          `json_attributes_topic`.
        type: string
      json_attributes_topic:
        description: >-
          The MQTT topic subscribed to receive a JSON dictionary payload and then
          set as sensor attributes. Implies `force_update` of the current sensor
          state when a message is received on this topic.
        type: string
      last_reset_value_template:
        description: >-
          Defines a
          [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
          to extract the last_reset. Available variables: `entity_id`. The
          `entity_id` can be used to reference the entity's attributes.
        type: string
      name:
        description: >-
          The name of the MQTT sensor. Can be set to `null` if only the device name
          is relevant. (Default: MQTT Sensor)
        type: string
      object_id:
        description: Used instead of `name` for automatic generation of `entity_id`
        type: string
      suggested_display_precision:
        description: >-
          The number of decimals which should be used in the sensor's state after
          rounding.
        type: string
      qos:
        description: The maximum QoS level to be used when receiving and publishing messages.
        type: string
      state_class:
        description: >-
          The
          [state_class](https://developers.home-assistant.io/docs/core/entity/sensor#available-state-classes)
          of the sensor. (Default: None)
        type: string
      state_topic:
        description: >-
          The MQTT topic subscribed to receive sensor values. If `device_class`,
          `state_class`, `unit_of_measurement` or `suggested_display_precision` is
          set, and a numeric value is expected, an empty value `''` will be ignored
          and will not update the state, a `'null'` value will set the sensor to an
          `unknown` state. The `device_class` can be `null`. (Default: None)
        type: string
      unique_id:
        description: >-
          An ID that uniquely identifies this sensor. If two sensors have the same
          unique ID, Home Assistant will raise an exception.
        type: string
      unit_of_measurement:
        description: >-
          Defines the units of measurement of the sensor, if any. The
          `unit_of_measurement` can be `null`. (Default: None)
        type: string
      value_template:
        description: >-
          Defines a
          [template](/docs/configuration/templating/#using-templates-with-the-mqtt-integration)
          to extract the value. If the template throws an error, the current state
          will be used instead.
        type: string
